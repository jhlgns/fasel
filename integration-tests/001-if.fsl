/*
OUTPUT:
1
2
3
4
5
6
7
8
9
0
100
1000
*/

test_fail := proc(message: *i8) void external
test_output := proc(format: *i8, ...) void external

f := proc(x: i64) i64
{
    if x < 10 return 0

    if x > 20 { return 100 }

    return 1000
}

main := proc() void
{
    a := 1
    if a == 2 {
        test_fail("")
    }

    test_output("1\n")

    a = 2
    if a == 2 test_output("2\n")
    
    test_output("3\n")

    a = 3
    if a == 2 {
        test_fail("")
    } else {
        test_output("4\n")
    }

    test_output("5\n")

    x := 1

    if x * 2 < 10 {
        y := 2

        if y != 3 {
            test_output("6\n")
        } else {
            test_fail("")
        }
    }

    if false {
        test_fail("")
    } else if true {
        test_output("7\n")
    } else {
        test_fail("")
    }

    if true {
        if true == true {
            if 3 < 1037824f {
                if 10 >= 10f {
                    test_output("8\n")
                }
            }
        }
    }

    if true test_output("9\n")
    else if true test_fail("")
    else test_fail("")

    test_output("%d\n", f(5))  // TODO: Wrong format specifier for i64 (implement type casting)
    test_output("%d\n", f(50))  // TODO: Wrong format specifier for i64 (implement type casting)
    test_output("%d\n", f(15))  // TODO: Wrong format specifier for i64 (implement type casting)

    // Condition must be boolean (no implicit casts are done)
    __error("typecheck") {
        if 0 test_fail("")
    }

    __error("typecheck") {
        if "" test_fail("")
    }

    __error("typecheck") {
        if 0f test_fail("")
    }
}
