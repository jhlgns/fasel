/*
OUTPUT:
Begin
0
1
2
3
4
5
6
7
8
9
x
xx
xxx
xxxx
xxxxx
x = 5
x = 4
x = 3
x = 2
x = 1
Done
1
3
5
*/

test_output := proc(format: *i8, ...) void external

main := proc() void
{
    a := 0

    test_output("Begin\n", a)

    while a < 10 {
        test_output("%d\n", a)  // TODO: Format specifier
        a = a + 1
    }

    i := 0
    while i < 5 {
        j := 0
        while j <= i {
            test_output("x")
            j = j + 1
        }

        test_output("\n")
        i = i + 1
    }

    x := 5
    while true {
        test_output("x = %d\n", x)  // TODO: Format specifier
        x = x - 1
        if x == 0 break
    }

    while true {
        break
        break
        break
        test_output("xxx\n")
        break
        break
        break
    }

    // TODO: Test trailing return
    // TODO: Test nested break and continue

    test_output("Done\n")

    h := 1
    while true {
        if h % 2 == 0 { h = h + 1 continue }
        test_output("%d\n", h)  // TODO
        h = h + 1
        if h > 5 break  // TODO return void does not work here because of the next expression
        continue
    }

    // test_output("xxx\n")
}
